/*
 * QES Quant Service API
 * QES Quant Service API provides easy access to Risk/Optimization API 
 *
 * OpenAPI spec version: 0.0.4
 * Contact: luo.qes@wolferesearch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.OptimizationRequest;
import io.swagger.client.model.OptimizationTemplate;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OptimizationApi
 */
@Ignore
public class OptimizationApiTest {

    private final OptimizationApi api = new OptimizationApi();

    
    /**
     * Gets optimization result for the date
     *
     * Returns optimized portfolio and other statistics
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOptimizationTest() throws ApiException {
        String uuid = null;
        String file = null;
        List<String> response = api.getOptimization(uuid, file);

        // TODO: test validations
    }
    
    /**
     * Gets optimization file list
     *
     * Returns file list for which optimization is run and summary
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOptimizationFileListTest() throws ApiException {
        String uuid = null;
        List<String> response = api.getOptimizationFileList(uuid);

        // TODO: test validations
    }
    
    /**
     * Gets the list of optimization tasks historical and current
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOptimizationListTest() throws ApiException {
        List<OptimizationTemplate> response = api.getOptimizationList();

        // TODO: test validations
    }
    
    /**
     * New Optimization Request
     *
     * Runs a new Optimization Request
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void newOptimizationRequestTest() throws ApiException {
        OptimizationRequest body = null;
        String response = api.newOptimizationRequest(body);

        // TODO: test validations
    }
    
}
