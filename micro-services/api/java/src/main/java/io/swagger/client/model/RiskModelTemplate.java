/*
 * QES Quant Service API
 * QES Quant Service API provides easy access to Risk/Optimization API 
 *
 * OpenAPI spec version: 0.0.4
 * Contact: luo.qes@wolferesearch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CovarianceMatrixOption;
import io.swagger.client.model.FactorInput;
import io.swagger.client.model.MetaInput;
import io.swagger.client.model.RiskModelOption;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * RiskModelTemplate
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-22T20:31:04.892Z")
public class RiskModelTemplate {
  @SerializedName("factors")
  private List<FactorInput> factors = null;

  @SerializedName("meta")
  private List<MetaInput> meta = null;

  @SerializedName("options")
  private RiskModelOption options = null;

  @SerializedName("covArgs")
  private CovarianceMatrixOption covArgs = null;

  public RiskModelTemplate factors(List<FactorInput> factors) {
    this.factors = factors;
    return this;
  }

  public RiskModelTemplate addFactorsItem(FactorInput factorsItem) {
    if (this.factors == null) {
      this.factors = new ArrayList<FactorInput>();
    }
    this.factors.add(factorsItem);
    return this;
  }

   /**
   * List of factor mnemonics inputs
   * @return factors
  **/
  @ApiModelProperty(value = "List of factor mnemonics inputs")
  public List<FactorInput> getFactors() {
    return factors;
  }

  public void setFactors(List<FactorInput> factors) {
    this.factors = factors;
  }

  public RiskModelTemplate meta(List<MetaInput> meta) {
    this.meta = meta;
    return this;
  }

  public RiskModelTemplate addMetaItem(MetaInput metaItem) {
    if (this.meta == null) {
      this.meta = new ArrayList<MetaInput>();
    }
    this.meta.add(metaItem);
    return this;
  }

   /**
   * List of meta data mnemonics inputs
   * @return meta
  **/
  @ApiModelProperty(value = "List of meta data mnemonics inputs")
  public List<MetaInput> getMeta() {
    return meta;
  }

  public void setMeta(List<MetaInput> meta) {
    this.meta = meta;
  }

  public RiskModelTemplate options(RiskModelOption options) {
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @ApiModelProperty(value = "")
  public RiskModelOption getOptions() {
    return options;
  }

  public void setOptions(RiskModelOption options) {
    this.options = options;
  }

  public RiskModelTemplate covArgs(CovarianceMatrixOption covArgs) {
    this.covArgs = covArgs;
    return this;
  }

   /**
   * Get covArgs
   * @return covArgs
  **/
  @ApiModelProperty(value = "")
  public CovarianceMatrixOption getCovArgs() {
    return covArgs;
  }

  public void setCovArgs(CovarianceMatrixOption covArgs) {
    this.covArgs = covArgs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RiskModelTemplate riskModelTemplate = (RiskModelTemplate) o;
    return Objects.equals(this.factors, riskModelTemplate.factors) &&
        Objects.equals(this.meta, riskModelTemplate.meta) &&
        Objects.equals(this.options, riskModelTemplate.options) &&
        Objects.equals(this.covArgs, riskModelTemplate.covArgs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(factors, meta, options, covArgs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RiskModelTemplate {\n");
    
    sb.append("    factors: ").append(toIndentedString(factors)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    covArgs: ").append(toIndentedString(covArgs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

