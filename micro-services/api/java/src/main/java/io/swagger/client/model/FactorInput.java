/*
 * QES Quant Service API
 * QES Quant Service API provides easy access to Risk/Optimization API 
 *
 * OpenAPI spec version: 0.0.4
 * Contact: luo.qes@wolferesearch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * FactorInput
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-22T20:31:04.892Z")
public class FactorInput {
  @SerializedName("name")
  private String name = null;

  @SerializedName("mnemonic")
  private String mnemonic = null;

  public FactorInput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Human readable name for the factor, should be unique across the list
   * @return name
  **/
  @ApiModelProperty(value = "Human readable name for the factor, should be unique across the list")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FactorInput mnemonic(String mnemonic) {
    this.mnemonic = mnemonic;
    return this;
  }

   /**
   * Factor Mnemonic
   * @return mnemonic
  **/
  @ApiModelProperty(value = "Factor Mnemonic")
  public String getMnemonic() {
    return mnemonic;
  }

  public void setMnemonic(String mnemonic) {
    this.mnemonic = mnemonic;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FactorInput factorInput = (FactorInput) o;
    return Objects.equals(this.name, factorInput.name) &&
        Objects.equals(this.mnemonic, factorInput.mnemonic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, mnemonic);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FactorInput {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    mnemonic: ").append(toIndentedString(mnemonic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

