/*
 * QES Quant Service API
 * QES Quant Service API provides easy access to Risk/Optimization API 
 *
 * OpenAPI spec version: 0.0.4
 * Contact: luo.qes@wolferesearch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * Option to control the specific risk of the risk model
 */
@ApiModel(description = "Option to control the specific risk of the risk model")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-22T20:31:04.892Z")
public class RiskModelSpRiskOption {
  @SerializedName("shrinkage")
  private BigDecimal shrinkage = null;

  /**
   * Gets or Sets fn
   */
  @JsonAdapter(FnEnum.Adapter.class)
  public enum FnEnum {
    MEAN("mean"),
    
    MEDIAN("median");

    private String value;

    FnEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FnEnum fromValue(String text) {
      for (FnEnum b : FnEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FnEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FnEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FnEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FnEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("fn")
  private FnEnum fn = FnEnum.MEAN;

  public RiskModelSpRiskOption shrinkage(BigDecimal shrinkage) {
    this.shrinkage = shrinkage;
    return this;
  }

   /**
   * Shrinkage to control the specific risk
   * minimum: 0
   * maximum: 1
   * @return shrinkage
  **/
  @ApiModelProperty(value = "Shrinkage to control the specific risk")
  public BigDecimal getShrinkage() {
    return shrinkage;
  }

  public void setShrinkage(BigDecimal shrinkage) {
    this.shrinkage = shrinkage;
  }

  public RiskModelSpRiskOption fn(FnEnum fn) {
    this.fn = fn;
    return this;
  }

   /**
   * Get fn
   * @return fn
  **/
  @ApiModelProperty(value = "")
  public FnEnum getFn() {
    return fn;
  }

  public void setFn(FnEnum fn) {
    this.fn = fn;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RiskModelSpRiskOption riskModelSpRiskOption = (RiskModelSpRiskOption) o;
    return Objects.equals(this.shrinkage, riskModelSpRiskOption.shrinkage) &&
        Objects.equals(this.fn, riskModelSpRiskOption.fn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(shrinkage, fn);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RiskModelSpRiskOption {\n");
    
    sb.append("    shrinkage: ").append(toIndentedString(shrinkage)).append("\n");
    sb.append("    fn: ").append(toIndentedString(fn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

