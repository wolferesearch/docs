/*
 * QES Quant Service API
 * QES Quant Service API provides easy access to Risk/Optimization API 
 *
 * OpenAPI spec version: 0.0.4
 * Contact: luo.qes@wolferesearch.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * OptimizationTemplate
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-22T20:31:04.892Z")
public class OptimizationTemplate {
  @SerializedName("target_risk")
  private BigDecimal targetRisk = null;

  @SerializedName("bound")
  private List<BigDecimal> bound = null;

  @SerializedName("max_ADV_participation")
  private BigDecimal maxADVParticipation = null;

  @SerializedName("max_turonver")
  private BigDecimal maxTuronver = null;

  @SerializedName("gross_weight")
  private BigDecimal grossWeight = null;

  @SerializedName("net_weight")
  private BigDecimal netWeight = null;

  /**
   * Gets or Sets objective
   */
  @JsonAdapter(ObjectiveEnum.Adapter.class)
  public enum ObjectiveEnum {
    MAXALPHA("maxAlpha"),
    
    MINRISK("minRisk"),
    
    MVO("MVO");

    private String value;

    ObjectiveEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ObjectiveEnum fromValue(String text) {
      for (ObjectiveEnum b : ObjectiveEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ObjectiveEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ObjectiveEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ObjectiveEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ObjectiveEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("objective")
  private ObjectiveEnum objective = null;

  @SerializedName("lambda")
  private BigDecimal lambda = null;

  public OptimizationTemplate targetRisk(BigDecimal targetRisk) {
    this.targetRisk = targetRisk;
    return this;
  }

   /**
   * Annualized Risk Target for optimization
   * minimum: 0.001
   * maximum: 10
   * @return targetRisk
  **/
  @ApiModelProperty(example = "0.4", value = "Annualized Risk Target for optimization")
  public BigDecimal getTargetRisk() {
    return targetRisk;
  }

  public void setTargetRisk(BigDecimal targetRisk) {
    this.targetRisk = targetRisk;
  }

  public OptimizationTemplate bound(List<BigDecimal> bound) {
    this.bound = bound;
    return this;
  }

  public OptimizationTemplate addBoundItem(BigDecimal boundItem) {
    if (this.bound == null) {
      this.bound = new ArrayList<BigDecimal>();
    }
    this.bound.add(boundItem);
    return this;
  }

   /**
   * Minimum and Maximum weight bound
   * @return bound
  **/
  @ApiModelProperty(example = "[-0.05,0.05]", value = "Minimum and Maximum weight bound")
  public List<BigDecimal> getBound() {
    return bound;
  }

  public void setBound(List<BigDecimal> bound) {
    this.bound = bound;
  }

  public OptimizationTemplate maxADVParticipation(BigDecimal maxADVParticipation) {
    this.maxADVParticipation = maxADVParticipation;
    return this;
  }

   /**
   * ADV Participation Ceiling (5% &#x3D;&#x3D; 0.05)
   * minimum: 0.001
   * maximum: 1
   * @return maxADVParticipation
  **/
  @ApiModelProperty(example = "0.05", value = "ADV Participation Ceiling (5% == 0.05)")
  public BigDecimal getMaxADVParticipation() {
    return maxADVParticipation;
  }

  public void setMaxADVParticipation(BigDecimal maxADVParticipation) {
    this.maxADVParticipation = maxADVParticipation;
  }

  public OptimizationTemplate maxTuronver(BigDecimal maxTuronver) {
    this.maxTuronver = maxTuronver;
    return this;
  }

   /**
   * Maximum turnover allowed
   * minimum: 0.001
   * maximum: 100
   * @return maxTuronver
  **/
  @ApiModelProperty(example = "1.5", value = "Maximum turnover allowed")
  public BigDecimal getMaxTuronver() {
    return maxTuronver;
  }

  public void setMaxTuronver(BigDecimal maxTuronver) {
    this.maxTuronver = maxTuronver;
  }

  public OptimizationTemplate grossWeight(BigDecimal grossWeight) {
    this.grossWeight = grossWeight;
    return this;
  }

   /**
   * Total notional weight of the optimized basket
   * minimum: 0.1
   * maximum: 100
   * @return grossWeight
  **/
  @ApiModelProperty(example = "2.0", value = "Total notional weight of the optimized basket")
  public BigDecimal getGrossWeight() {
    return grossWeight;
  }

  public void setGrossWeight(BigDecimal grossWeight) {
    this.grossWeight = grossWeight;
  }

  public OptimizationTemplate netWeight(BigDecimal netWeight) {
    this.netWeight = netWeight;
    return this;
  }

   /**
   * Net weight of the optimized basket. For Long/Short neutral the Net weight should be 0
   * minimum: -100
   * maximum: 100
   * @return netWeight
  **/
  @ApiModelProperty(example = "0.0", value = "Net weight of the optimized basket. For Long/Short neutral the Net weight should be 0")
  public BigDecimal getNetWeight() {
    return netWeight;
  }

  public void setNetWeight(BigDecimal netWeight) {
    this.netWeight = netWeight;
  }

  public OptimizationTemplate objective(ObjectiveEnum objective) {
    this.objective = objective;
    return this;
  }

   /**
   * Get objective
   * @return objective
  **/
  @ApiModelProperty(value = "")
  public ObjectiveEnum getObjective() {
    return objective;
  }

  public void setObjective(ObjectiveEnum objective) {
    this.objective = objective;
  }

  public OptimizationTemplate lambda(BigDecimal lambda) {
    this.lambda = lambda;
    return this;
  }

   /**
   * Risk aversion parameter, only used when objective is set as MVO
   * @return lambda
  **/
  @ApiModelProperty(value = "Risk aversion parameter, only used when objective is set as MVO")
  public BigDecimal getLambda() {
    return lambda;
  }

  public void setLambda(BigDecimal lambda) {
    this.lambda = lambda;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptimizationTemplate optimizationTemplate = (OptimizationTemplate) o;
    return Objects.equals(this.targetRisk, optimizationTemplate.targetRisk) &&
        Objects.equals(this.bound, optimizationTemplate.bound) &&
        Objects.equals(this.maxADVParticipation, optimizationTemplate.maxADVParticipation) &&
        Objects.equals(this.maxTuronver, optimizationTemplate.maxTuronver) &&
        Objects.equals(this.grossWeight, optimizationTemplate.grossWeight) &&
        Objects.equals(this.netWeight, optimizationTemplate.netWeight) &&
        Objects.equals(this.objective, optimizationTemplate.objective) &&
        Objects.equals(this.lambda, optimizationTemplate.lambda);
  }

  @Override
  public int hashCode() {
    return Objects.hash(targetRisk, bound, maxADVParticipation, maxTuronver, grossWeight, netWeight, objective, lambda);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptimizationTemplate {\n");
    
    sb.append("    targetRisk: ").append(toIndentedString(targetRisk)).append("\n");
    sb.append("    bound: ").append(toIndentedString(bound)).append("\n");
    sb.append("    maxADVParticipation: ").append(toIndentedString(maxADVParticipation)).append("\n");
    sb.append("    maxTuronver: ").append(toIndentedString(maxTuronver)).append("\n");
    sb.append("    grossWeight: ").append(toIndentedString(grossWeight)).append("\n");
    sb.append("    netWeight: ").append(toIndentedString(netWeight)).append("\n");
    sb.append("    objective: ").append(toIndentedString(objective)).append("\n");
    sb.append("    lambda: ").append(toIndentedString(lambda)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

